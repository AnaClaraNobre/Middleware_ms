name: Deploy Middleware Microservice

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código do Middleware
        uses: actions/checkout@v3

      - name: Clonar repositório do Product
        run: git clone https://github.com/angelodrigues/ecommerce_product.git ../ecommerce_product

      # - name: Clonar repositório do Order
      #   run: git clone https://github.com/angelodrigues/ecommerce_orders.git ../ecommerce_order

      # - name: Clonar repositório do Payment
      #   run: git clone https://github.com/angelodrigues/ecommerce_payment.git ../ecommerce_payment

      - name: Clonar repositório do User
        run: git clone https://github.com/AnaClaraNobre/User_Ms.git ../user_ms

      - name: Clonar repositório do Authenticator
        run: git clone https://github.com/AnaClaraNobre/Authenticator-Ms.git ../authenticator

      - name: Instalar User_MS localmente
        run: |
          cd ../user_ms
          mvn install -DskipTests

      - name: Instalar Authenticator_MS localmente
        run: |
          cd ../authenticator
          mvn install -DskipTests

      - name: Instalar Product_MS localmente
        run: |
          cd ../ecommerce_product
          mvn install -DskipTests

      # - name: Instalar Order_MS localmente
      #   run: |
      #     cd ../ecommerce_order
      #     mvn install -DskipTests

      # - name: Instalar Payment_MS localmente
      #   run: |
      #     cd ../ecommerce_payment
      #     mvn install -DskipTests

      - name: Voltar para o Middleware
        run: cd ../Middleware_ms

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build com Maven
        run: mvn clean package -DskipTests

      - name: Login no Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build da imagem Docker
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/middleware_ms:latest .

      - name: Push da imagem Docker
        run: docker push ${{ secrets.DOCKER_USERNAME }}/middleware_ms:latest

      - name: Deploy na EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/middleware_ms:latest
            docker stop middleware_ms || true && docker rm middleware_ms || true
            docker run -d --name middleware_ms -p 8090:8090 ${{ secrets.DOCKER_USERNAME }}/middleware_ms:latest