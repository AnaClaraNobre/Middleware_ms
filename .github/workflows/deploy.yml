name: Deploy Middleware Microservice

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código do Middleware
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Clonar e instalar User_MS
        run: |
          git clone https://github.com/AnaClaraNobre/User_Ms.git ../user_ms
          cd ../user_ms
          mvn install -DskipTests

      - name: Build do Middleware com Maven
        run: mvn clean package -DskipTests

      - name: Login no Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build da imagem Docker
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/middleware_ms:latest .

      - name: Push da imagem Docker com retry e upload sequencial
        run: |
          for i in {1..3}; do
            echo "Tentativa $i de push..."
            docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest && break || sleep 15
          done

      - name: Deploy na EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Criando rede ecommerce-net (se não existir)..."
            docker network inspect ecommerce-net >/dev/null 2>&1 || docker network create ecommerce-net

            echo "Parando e removendo container antigo do middlewarems..."
            docker stop middlewarems || true
            docker rm middlewarems || true

            echo "Puxando nova imagem..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/middleware_ms:latest

            echo "Subindo novo container do middlewarems..."
            docker run -d --name middlewarems -p 8090:8090 --network ecommerce-net ${{ secrets.DOCKER_USERNAME }}/middleware_ms:latest
